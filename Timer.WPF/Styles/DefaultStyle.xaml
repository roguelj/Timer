<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    >

    <xctk:InverseBoolConverter x:Key="InverseBoolConverter" />
    
    <Style x:Key="ControlStyle" TargetType="FrameworkElement">
        <Setter Property="Margin" Value="3"/>
    </Style>

    <Style x:Key="ActionElementStyle" TargetType="Control" BasedOn="{StaticResource ControlStyle}">
        <Setter Property="Background" Value="{DynamicResource ActionElementBackgroundBrush }" />
        <Setter Property="Foreground" Value="{DynamicResource ActionElementForegroundBrush }" />
    </Style>
    
    <!-- standard buttons -->
    <Style x:Key="ButtonControlStyle" TargetType="Button" BasedOn="{StaticResource ActionElementStyle}">
        <Setter Property="Padding" Value="2"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{DynamicResource ActionElementBorderBrush}" BorderThickness="1" CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ActionElementBackgroundHoverBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    
    <!--  drop down sub buttons -->
    <Style x:Key="DropDownSubButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonControlStyle}" >
        <Setter Property="Padding" Value="3" />
        <Setter Property="Margin" Value="1" />
    </Style>
    
    <Style x:Key="OkCancelButtonControlStyle" TargetType="Button" BasedOn="{StaticResource ButtonControlStyle}">

    </Style>
    
    
    <Style x:Key="EntityComboBoxSelectorStyle" TargetType="ComboBox" BasedOn="{StaticResource ActionElementStyle}" />


    



    <!-- drop down buttons -->
    <Style x:Key="DropDownButtonStyle" TargetType="{x:Type xctk:DropDownButton}" BasedOn="{StaticResource ActionElementStyle}">
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:DropDownButton}">
                    <Grid x:Name="MainGrid"
                SnapsToDevicePixels="True">
                        <ToggleButton x:Name="PART_DropDownButton"
                          Grid.Column="1"
                          IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                          IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <ContentPresenter />
                                </ControlTemplate>
                            </ToggleButton.Template>
                            <Grid>
                                <Button x:Name="ToggleButtonChrome"
                                     Background="{TemplateBinding Background}"
                                     Foreground="{TemplateBinding Foreground}"
                                     BorderThickness="{TemplateBinding BorderThickness}"
                                     BorderBrush="{TemplateBinding BorderBrush}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      RecognizesAccessKey="true" />
                                        <Grid x:Name="arrowGlyph"
                          IsHitTestVisible="False"
                          Margin="4,3,4,3"
                          Grid.Column="1">
                                            <Path x:Name="Arrow"
                            Width="9"
                            Height="5"
                            Data="M0,0 L3,0 4.5,1.5 6,0 9,0 4.5,4.5 z"
                            Fill="{DynamicResource TextForegroundBrush}"
                            Margin="0,1,0,0" />
                                        </Grid>
                                    </Grid>
                                </Button>
                            </Grid>
                        </ToggleButton>

                        <Popup x:Name="PART_Popup"
                   HorizontalOffset="1"
                   VerticalOffset="1"
                   AllowsTransparency="True"
                   StaysOpen="False"
                   Placement="{TemplateBinding DropDownPosition}"
                   Focusable="False"
                   IsOpen="{Binding IsChecked, ElementName=PART_DropDownButton}"
                   ToolTip="{x:Static sys:String.Empty}">
                            <Popup.Resources>
                                <Style TargetType="ToolTip">
                                    <Style.Triggers>
                                        <Trigger Property="Content"
                             Value="{x:Static sys:String.Empty}">
                                            <Setter Property="Visibility"
                              Value="Collapsed" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Popup.Resources>
                            <Border BorderThickness="1"
                      Background="{TemplateBinding DropDownContentBackground}"
                      
                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <ScrollViewer x:Name="DropDownScrollViewer"
                              VerticalScrollBarVisibility="Auto">
                                    <ContentPresenter x:Name="PART_ContentPresenter"
                                    Content="{TemplateBinding DropDownContent}" />
                                </ScrollViewer>
                            </Border>
                        </Popup>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                     Value="False">
                            <Setter Property="Fill"
                      TargetName="Arrow"
                      Value="#AFAFAF" />
                            <Setter Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ActionElementBackgroundHoverBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    
    
    <Style x:Key="HeaderStyle" TargetType="Label" BasedOn="{StaticResource ControlStyle}">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush }" />
    </Style>


    <Style x:Key="DateTimePickerStyle" TargetType="{x:Type xctk:DateTimePicker}" BasedOn="{StaticResource ActionElementStyle}" />

    <Style x:Key="TagListBoxStyle" TargetType="ListBox" BasedOn="{StaticResource ActionElementStyle}">
        
    </Style>
    
    <Style x:Key="DurationLabelControlStyle" TargetType="Label" BasedOn="{StaticResource ControlStyle}">
        <Setter Property="Background" Value="{DynamicResource NonActionElementBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource NonActionElementForegroundBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="TaskListHeaderBorderControlStyle" TargetType="Border" BasedOn="{StaticResource ControlStyle}">
        <Setter Property="Background" Value="#222" />
        <Setter Property="CornerRadius" Value="4" />
        
    </Style>

    <Style x:Key="TaskListHeaderLabelControlStyle" TargetType="Label" BasedOn="{StaticResource ControlStyle}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="1"/>
    </Style>

    <Style x:Key="DropDownButtonContentStackPanelStyle" TargetType="StackPanel" BasedOn="{StaticResource ControlStyle}">
        <Setter Property="Background" Value="{DynamicResource DropDownButtonContainerBackgroundBrush}" />
    </Style>

    <Style x:Key="DialogStyle" BasedOn="{StaticResource ControlStyle}" TargetType="UserControl">

        <Setter Property="Background" Value="{DynamicResource DialogBackgroundBrush}" />
        
    </Style>
 
    
</ResourceDictionary>