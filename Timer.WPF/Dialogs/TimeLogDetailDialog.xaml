<UserControl x:Class="Timer.WPF.Dialogs.TimeLogDetailDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:converters="clr-namespace:Timer.WPF.Converters"
             xmlns:viewmodels="clr-namespace:Timer.WPF.ViewModels"
             d:DataContext="{d:DesignInstance Type=viewmodels:TimeLogDetailViewModel}"
             xmlns:res="clr-namespace:Timer.Shared.Resources;assembly=Timer.Shared"
             mc:Ignorable="d" 
             d:Background="White"
             >


    <prism:Dialog.WindowStyle>
        <Style TargetType="Window">
            <Setter Property="ResizeMode" Value="NoResize"/>
            <Setter Property="ShowInTaskbar" Value="True"/>
            <Setter Property="SizeToContent" Value="WidthAndHeight"/>
        </Style>
    </prism:Dialog.WindowStyle>

    <UserControl.Resources>

        <Style x:Key="HeaderStyle" TargetType="Label">
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

        <Style x:Key="ControlStyle" TargetType="FrameworkElement">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="MinWidth" Value="100"/>
        </Style>

        <Style x:Key="OkCancelButtonControlStyle" TargetType="Button" BasedOn="{StaticResource ControlStyle}">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="MinWidth" Value="100"/>
        </Style>

        <Style x:Key="SmallButtonControlStyle" TargetType="Button">
            <Setter Property="Margin" Value="2"/>
        </Style>

        <CollectionViewSource Source="{Binding Tasks}" x:Key="TasksCollectionViewSource" Filter="CollectionViewSource_Filter"/>

        <converters:HtmlColourConverter x:Key="HtmlColourConverter" />
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <DataTemplate x:Key="NameDataTemplate">
            <Grid Margin="0,2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Name}" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="ColouredNameDataTemplate">
            <Grid Margin="0,2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Name}" Background="{Binding Path=Colour, Converter={StaticResource HtmlColourConverter}}" Padding="5,2" Margin="0" Foreground="Black" />
            </Grid>
        </DataTemplate>

    </UserControl.Resources>

    <DockPanel >
        <DockPanel.Style>
            <Style TargetType="DockPanel">
                <Setter Property="IsEnabled" Value="True" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsInitialising, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="False">
                        <Setter Property="IsEnabled" Value="True" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </DockPanel.Style>

        <!-- Ok / Cancel etc-->
        <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom">
            <Button Content="{x:Static res:Resources.OkButtonText}" Command="{Binding CloseDialogOkCommand}" Style="{StaticResource OkCancelButtonControlStyle}"/>
            <Button Content="{x:Static res:Resources.CancelButtonText}" Command="{Binding CloseDialogCancelCommand}" Style="{StaticResource OkCancelButtonControlStyle}"/>
            <Button Content="{x:Static res:Resources.LoadAllButtonText}" Command="{Binding LoadAllCommand}" Style="{StaticResource OkCancelButtonControlStyle}"/>
        </StackPanel>

        
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!-- Start & End times -->
            <Label Grid.Row="0" Grid.Column="0" Content="{x:Static res:Resources.StartLabelText}" Style="{StaticResource HeaderStyle}" />
            <xctk:DateTimePicker Grid.Row="0" Grid.Column="1" Value="{Binding StartDateTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ControlStyle}" />
            <Label Grid.Row="1" Grid.Column="0" Content="{x:Static res:Resources.EndLabelText}" Style="{StaticResource HeaderStyle}" />
            <xctk:DateTimePicker Grid.Row="1" Grid.Column="1" Value="{Binding EndDateTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ControlStyle}"/>

            <Label Grid.Row="0" Grid.Column="2" Grid.RowSpan="2" >
                <TextBlock Text="{Binding Duration, StringFormat=d\\d\\ hh\\h\\ mm\\m}"/>
            </Label>


            <!-- projects -->
            <Label Grid.Row="2" Grid.Column="0" Content="{x:Static res:Resources.ProjectLabelText}" Style="{StaticResource HeaderStyle}" />
            <ComboBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" 
                      ItemsSource="{Binding Projects}" 
                      IsSynchronizedWithCurrentItem="True" 
                      SelectedItem="{Binding SelectedProject}" 
                      Style="{StaticResource ControlStyle}"
                      ItemTemplate="{StaticResource NameDataTemplate}" 
                      IsTextSearchEnabled="True"/>


            <!-- tasks -->
            <Label Grid.Row="3" Grid.Column="0" Content="{x:Static res:Resources.TaskLabelText}" Style="{StaticResource HeaderStyle}" />
            <ComboBox Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="1" 
                      ItemsSource="{Binding Source={StaticResource TasksCollectionViewSource}}" 
                      IsSynchronizedWithCurrentItem="True" 
                      SelectedItem="{Binding SelectedTask}" 
                      Style="{StaticResource ControlStyle}"
                      x:Name="TaskComboBox"
                      ItemTemplate="{StaticResource NameDataTemplate}"
                      IsTextSearchEnabled="True"/>

            <Button Grid.Row="3" Grid.Column="2" Content="x" Style="{StaticResource SmallButtonControlStyle}" Command="{Binding ClearTaskCommand}" MaxWidth="25"/>

            <!-- tags -->
            <Label Grid.Row="4" Grid.Column="0" Content="{x:Static res:Resources.TagLabelText}" Style="{StaticResource HeaderStyle}" />
            <ListBox Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2" MaxHeight="200"
                 ItemsSource="{Binding Tags}" 
                 SelectionMode="Multiple" 
                 x:Name="SelectedTagsListBox" 
                 SelectionChanged="SelectedTagsListBox_SelectionChanged" 
                 Style="{StaticResource ControlStyle}"
                 ItemTemplate="{StaticResource ColouredNameDataTemplate}">

                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel MaxWidth="200" Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>


            <!-- billable -->
            <Label Grid.Row="5" Grid.Column="0" Content="{x:Static res:Resources.IsBillableLabelText}" Style="{StaticResource HeaderStyle}"/>
            <CheckBox Grid.Row="5" Grid.Column="1" IsChecked="{Binding IsBillable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Style="{StaticResource ControlStyle}"/>


            <!-- description -->
            <Label Grid.Row="6" Grid.Column="0"  Content="{x:Static res:Resources.DescriptionLabelText}" Style="{StaticResource HeaderStyle}" VerticalAlignment="Center"/>
            <TextBox Grid.Row="6" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinHeight="50" Style="{StaticResource ControlStyle}"/>

        </Grid>


    </DockPanel>

</UserControl>
